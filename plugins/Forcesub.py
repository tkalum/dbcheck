import os
from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.errors import UserNotParticipant
from database.database import *
from config import *

@Client.on_message(filters.private & filters.incoming)
async def forcesub(c, m):
    owner = await c.get_users(int(OWNER_ID))
    if UPDATE_CHANNEL:
        try:
            user = await c.get_chat_member(UPDATE_CHANNEL, m.from_user.id)
            if user.status == "kicked":
               await m.reply_text("**Y·¥è·¥ú ·¥Ä Ä·¥á  ô·¥Ä…¥…¥·¥á·¥Ö …™…¥ O·¥ú Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ A·¥Ö·¥ç…™…¥ üòú**", quote=True)
               return
        except UserNotParticipant:
            buttons = [[InlineKeyboardButton(text='U·¥ò·¥Ö·¥Ä·¥õ·¥ás C ú·¥Ä…¥…¥·¥á ü üîñ', url=f"https://t.me/{UPDATE_CHANNEL}")]]
            if m.text:
                if (len(m.text.split(' ')) > 1) & ('start' in m.text):
                    chat_id, msg_id = m.text.split(' ')[1].split('_')
                    buttons.append([InlineKeyboardButton('üîÑ R·¥á“ì Ä·¥ás ú', callback_data=f'refresh+{chat_id}+{msg_id}')])
            await m.reply_text(
                f"Hey {m.from_user.mention(style='md')}  è·¥è·¥ú …¥·¥á·¥á·¥Ö ·¥ä·¥è…™…¥ M è ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás ·¥Ñ ú·¥Ä…¥…¥·¥á ü …™…¥ ·¥è Ä·¥Ö·¥á Ä ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á üòâ\n\n"
                "__P Ä·¥áss ·¥õ ú·¥á F·¥è ü ü·¥è·¥°…™…¥…¢ B·¥ú·¥õ·¥õ·¥è…¥ ·¥õ·¥è ·¥ä·¥è…™…¥ N·¥è·¥° üëá__",
                reply_markup=InlineKeyboardMarkup(buttons),
                quote=True
            )
            return
        except Exception as e:
            print(e)
            await m.reply_text(f"S·¥è·¥ç·¥á·¥õ ú…™…¥…¢ W Ä·¥è…¥…¢. P ü·¥á·¥Äs·¥á ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥  ü·¥Ä·¥õ·¥á Ä ·¥è Ä ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ {owner.mention(style='md')}", quote=True)
            return
    await m.continue_propagation()


@Client.on_callback_query(filters.regex('^refresh'))
async def refresh_cb(c, m):
    owner = await c.get_users(int(OWNER_ID))
    if UPDATE_CHANNEL:
        try:
            user = await c.get_chat_member(UPDATE_CHANNEL, m.from_user.id)
            if user.status == "kicked":
               try:
                   await m.message.edit("**Y·¥è·¥ú ·¥Ä Ä·¥á  ô·¥Ä…¥…¥·¥á·¥Ö …™…¥ O·¥ú Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ A·¥Ö·¥ç…™…¥ üòú**")
               except:
                   pass
               return
        except UserNotParticipant:
            await m.answer('Y·¥è·¥ú ·¥Ä Ä·¥á …¥·¥è·¥õ  è·¥á·¥õ ·¥ä·¥è…™…¥·¥á·¥Ö ·¥è·¥ú Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü. \nF…™ Äs·¥õ ·¥ä·¥è…™…¥ ·¥Ä…¥·¥Ö ·¥õ ú·¥á…¥ ·¥ò Ä·¥áss  Ä·¥á“ì Ä·¥ás ú  ô·¥ú·¥õ·¥õ·¥è…¥ ü§§', show_alert=True)
            return
        except Exception as e:
            print(e)
            await m.message.edit(f"S·¥è·¥ç·¥á·¥õ ú…™…¥…¢ W Ä·¥è…¥…¢. P ü·¥á·¥Äs·¥á ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥  ü·¥Ä·¥õ·¥á Ä ·¥è Ä ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ{owner.mention(style='md')}")
            return

    cmd, chat_id, msg_id = m.data.split("+")
    msg = await c.get_messages(int(chat_id), int(msg_id)) if not DB_CHANNEL_ID else await c.get_messages(int(DB_CHANNEL_ID), int(msg_id))
    if msg.empty:
        return await m.reply_text(f"ü•¥ S·¥è Ä Ä è  ô Ä·¥è  è·¥è·¥ú Ä “ì…™ ü·¥á ·¥°·¥Äs ·¥ç…™ss…™…¥…¢\n\nP ü·¥á·¥Äs·¥á ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥ç è ·¥è·¥°…¥·¥á Ä üëâ {owner.mention(style='md')}")

    caption = msg.caption.markdown
    as_uploadername = (await get_data(str(chat_id))).up_name
    if as_uploadername:
        if chat_id.startswith('-100'): #if file from channel
            channel = await c.get_chat(int(chat_id))
            caption += "\n\n\n**--U·¥ò ü·¥è·¥Ä·¥Ö·¥á Ä D·¥á·¥õ·¥Ä…™ üs:--**\n\n"
            caption += f"**üì¢ C ú·¥Ä…¥…¥·¥á ü N·¥Ä·¥ç·¥á:** __{channel.title}__\n\n"
            caption += f"**üó£ Us·¥á Ä N·¥Ä·¥ç·¥á:** @{channel.username}\n\n" if channel.username else ""
            caption += f"**üë§ C ú·¥Ä…¥…¥·¥á ü I·¥Ö:** __{channel.id}__\n\n"
        
        else: #if file not from channel
            user = await c.get_users(int(chat_id))
            caption += "\n\n\n**--U·¥ò ü·¥è·¥Ä·¥Ö·¥á Ä D·¥á·¥õ·¥Ä…™ üs:--**\n\n"
            caption += f"**üçÅ N·¥Ä·¥ç·¥á:** [{user.from_user.first_name}](tg://user?id={user.from_user.id})\n\n"
            caption += f"**üñã Us·¥á Ä N·¥Ä·¥ç·¥á:** @{user.username}\n\n" if user.username else ""



    await msg.copy(m.from_user.id, caption=caption)
    await m.message.delete()
